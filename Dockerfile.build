# Ubuntu 20.04 amd64 dependencies
FROM --platform=linux/amd64 nvidia/cuda:11.3.1-devel-ubuntu20.04 AS base-amd64
# ROCm only supports amd64
RUN apt-get update && \
    apt-get install -y wget && \
    mkdir --parents --mode=0755 /etc/apt/keyrings && \
    wget https://repo.radeon.com/rocm/rocm.gpg.key -O - | gpg --dearmor > /etc/apt/keyrings/rocm.gpg && \
    echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/rocm.gpg] https://repo.radeon.com/rocm/apt/debian focal main" > /etc/apt/sources.list.d/rocm.list && \
    echo "Package: *" > /etc/apt/preferences.d/rocm-pin-600 && \
    echo "Pin: release o=repo.radeon.com" >> /etc/apt/preferences.d/rocm-pin-600 && \
    echo "Pin-Priority: 600" >> /etc/apt/preferences.d/rocm-pin-600 && \
    apt-get update && \
    apt-get install -y rocm-hip-libraries && \
    wget "https://github.com/Kitware/CMake/releases/download/v3.27.6/cmake-3.27.6-linux-x86_64.sh" -O /tmp/cmake-installer.sh && \
    chmod +x /tmp/cmake-installer.sh && /tmp/cmake-installer.sh --skip-license --prefix=/usr/local

ENV ROCM_PATH=/opt/rocm
# TODO - remove me if everything works and doesn't complain about deps...
#     echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/rocm.gpg] https://repo.radeon.com/amdgpu/5.7.1/ubuntu focal main" > /etc/apt/sources.list.d/amdgpu.list


# Ubuntu 20.04 arm64 dependencies
FROM --platform=linux/arm64 nvidia/cuda:11.3.1-devel-ubuntu20.04 AS base-arm64
RUN apt-get update && \
    apt-get install -y wget && \
    wget "https://github.com/Kitware/CMake/releases/download/v3.27.6/cmake-3.27.6-linux-aarch64.sh" -O /tmp/cmake-installer.sh && \
    chmod +x /tmp/cmake-installer.sh && /tmp/cmake-installer.sh --skip-license --prefix=/usr/local


FROM base-${TARGETARCH}
ARG TARGETARCH
ARG GOFLAGS="'-ldflags -w -s'"
ARG CLBLAST_VER=1.6.1

# Common toolchain
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y gcc-10 g++-10 cpp-10 git ocl-icd-opencl-dev && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10

# CLBlast
RUN wget -qO- https://github.com/CNugteren/CLBlast/archive/refs/tags/${CLBLAST_VER}.tar.gz | tar zxv -C /tmp/ && \
    cd /tmp/CLBlast-${CLBLAST_VER} && mkdir build && cd build && cmake .. && make && make install 
ENV CLBlast_DIR=/usr/local/lib/cmake/CLBlast

# install go
ADD https://dl.google.com/go/go1.21.3.linux-$TARGETARCH.tar.gz /tmp/go1.21.3.tar.gz
RUN mkdir -p /usr/local && tar xz -C /usr/local </tmp/go1.21.3.tar.gz

# build the final binary
WORKDIR /go/src/github.com/jmorganca/ollama
COPY . .

ENV GOOS=linux
ENV GOARCH=$TARGETARCH
ENV GOFLAGS=$GOFLAGS

RUN /usr/local/go/bin/go generate ./... && \
    /usr/local/go/bin/go build .
